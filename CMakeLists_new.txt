

cmake_minimum_required(VERSION 3.18..4.0)
project(Coro-Roro-New)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(Threads REQUIRED)

# Create the new CoroRoro library
add_library(corororo_new STATIC
    include/corororo/scheduler/scheduler.cpp
    include/corororo/scheduler/worker_pool.cpp
)

target_include_directories(corororo_new PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

target_link_libraries(corororo_new PUBLIC Threads::Threads)

# Set library properties
set_target_properties(corororo_new PROPERTIES
    CXX_STANDARD 20
    CXX_STANDARD_REQUIRED ON
    CXX_EXTENSIONS OFF
)

# Create the new test executable
add_executable(corororo_new_tests
    test/test_new_main.cpp
    test/test_new_basic.cpp
)

target_include_directories(corororo_new_tests PRIVATE 
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/test
)

target_link_libraries(corororo_new_tests PRIVATE corororo_new)

# Set C++20 for the test executable
set_target_properties(corororo_new_tests PROPERTIES
    CXX_STANDARD 20
    CXX_STANDARD_REQUIRED ON
    CXX_EXTENSIONS OFF
)

# Set compiler flags
if(MSVC)
    target_compile_options(corororo_new_tests PRIVATE /W4 /WX /permissive-)
    target_compile_options(corororo_new PRIVATE /W4 /WX /permissive-)
else()
    target_compile_options(corororo_new_tests PRIVATE -Wall -Wextra -Wpedantic -Werror)
    target_compile_options(corororo_new PRIVATE -Wall -Wextra -Wpedantic -Werror)
endif()

# Build instructions:
# mkdir build_new
# cd build_new
# cmake -f ../CMakeLists_new.txt ..
# cmake --build .
# ./corororo_new_tests
